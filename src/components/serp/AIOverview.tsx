import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Brain, ExternalLink, Sparkles } from "lucide-react";

interface Source {
  title: string;
  url: string;
  favicon?: string;
}

interface AIOverviewProps {
  content: string;
  sources: Source[];
  isGenerating?: boolean;
}

export function AIOverview({ content, sources, isGenerating = false }: AIOverviewProps) {
  return (
    <Card className="p-6 bg-gradient-to-br from-blue-50 to-purple-50 dark:from-blue-950/50 dark:to-purple-950/50 border-2 border-blue-200 dark:border-blue-800 shadow-lg">
      <div className="flex items-center gap-3 mb-4">
        <div className="p-2.5 bg-gradient-to-br from-blue-500 to-purple-500 rounded-lg shadow-md">
          <Brain className="w-5 h-5 text-white" />
        </div>
        <div className="flex-1">
          <div className="flex items-center gap-2">
            <h3 className="font-semibold text-blue-900 dark:text-blue-100">AI Overview</h3>
            <Badge variant="outline" className="text-xs border-blue-300 text-blue-700 dark:text-blue-300">
              <Sparkles className="w-3 h-3 mr-1" />
              Experimental
            </Badge>
          </div>
          <p className="text-xs text-blue-600 dark:text-blue-400 mt-0.5">
            Generated by AI â€¢ May contain inaccuracies
          </p>
        </div>
      </div>
      
      {isGenerating ? (
        <div className="space-y-3 animate-pulse">
          <div className="h-4 bg-blue-200/50 dark:bg-blue-800/30 rounded w-full"></div>
          <div className="h-4 bg-blue-200/50 dark:bg-blue-800/30 rounded w-5/6"></div>
          <div className="h-4 bg-blue-200/50 dark:bg-blue-800/30 rounded w-4/6"></div>
        </div>
      ) : (
        <>
          <div className="prose prose-sm dark:prose-invert max-w-none mb-4">
            <p className="text-gray-700 dark:text-gray-300 leading-relaxed">
              {content}
            </p>
          </div>

          {sources && sources.length > 0 && (
            <div className="border-t border-blue-200 dark:border-blue-800 pt-4">
              <p className="text-xs font-medium text-gray-600 dark:text-gray-400 mb-3 flex items-center gap-1">
                <ExternalLink className="w-3 h-3" />
                Sources
              </p>
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
                {sources.map((source, i) => (
                  <a
                    key={i}
                    href={source.url}
                    className="flex items-center gap-2 p-3 bg-white dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600 transition-all hover:shadow-md group"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    {source.favicon ? (
                      <img 
                        src={source.favicon} 
                        alt="" 
                        className="w-4 h-4 rounded"
                        onError={(e) => {
                          e.currentTarget.style.display = 'none';
                        }}
                      />
                    ) : (
                      <ExternalLink className="w-4 h-4 text-blue-600 shrink-0" />
                    )}
                    <span className="text-xs truncate flex-1 text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400">
                      {source.title}
                    </span>
                  </a>
                ))}
              </div>
            </div>
          )}
        </>
      )}
    </Card>
  );
}
